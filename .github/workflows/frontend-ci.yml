name: Frontend Continuous Integration

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Lint
        run: npm run lint
        working-directory: starter/frontend

  test_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Tests
        run: npm test
        working-directory: starter/frontend

  build_job:
    runs-on: ubuntu-latest
    needs: [lint_job, test_job]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Build Docker Image
        run: |
          docker build -t frontend-app:${{ github.sha }} -f Dockerfile .
        working-directory: starter/frontend
