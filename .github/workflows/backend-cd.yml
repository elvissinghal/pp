name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: 049086955797.dkr.ecr.us-east-1.amazonaws.com/backend
  EKS_CLUSTER_NAME: cluster
  PYTHON_VERSION: 3.9

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Specify Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install dependencies
        run: |
          pip install pipenv
      - name: Run lint
        run: |
          pip install flake8
          cd starter/backend && pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Specify Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install dependencies
        run: |
          pip install pipenv
          pip install flake8
      - name: Run lint
        run: |          
          cd starter/backend && pipenv install pytest && pipenv run test
  build:
    needs: [lint,test]
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: backend
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Run linting
        run: |
          cd starter/backend
          pipenv run lint

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push the Docker image
        working-directory: starter/backend
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update kubeconfig for Amazon EKS
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Apply the Kubernetes manifests with kustomize
        run: kustomize build starter/backend/k8s | kubectl apply -f -
